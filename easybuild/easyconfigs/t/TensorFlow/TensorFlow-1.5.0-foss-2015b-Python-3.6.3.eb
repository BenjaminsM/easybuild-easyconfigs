easyblock = 'CmdCPp'

name = 'TensorFlow'
version = '1.5.0'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://www.tensorflow.org/'
description = "An open-source software library for Machine Intelligence"

toolchain = {'name': 'foss', 'version': '2015b'}

pyver = '3.6.3'
pyshortver = ''.join(pyver.split('.')[:2])

builddependencies = [
    ('Bazel', '0.10.0'),
]

dependencies = [
    ('protobuf', '3.5.1'),
    # Build fails on CentOS 6.x when TensorFlow is configured with jemalloc as malloc support.
    #('jemalloc', '5.0.1'),
    ('SWIG', '3.0.12', versionsuffix)
    ('TensorFlowPyDepBundle', version, versionsuffix),
]

sources = ['v%(version)s.tar.gz']
source_urls = ['https://github.com/tensorflow/tensorflow/archive/']
patches = [('tensorflow-v%(version)s-foss.patch')]
checksums = [
    '0642781c3a3a8c2c4834b91b86aec385f0b2ada7d721571458079478cc5b29c8', # tensorflow-1.5.0.tar.gz
    'd9125fdf83e66945f62e1c85bfc4dbda005de2604d9d8edd617b9598952671c3', # tensorflow-1.5.0-foss.patch
]

#
# Use custom configure + bazel build cmd to create a Python wheel file,
# which will be installed with pip.
#
with_configure = False
tf_wheel_file = "tensorflow-%(version)s-cp%(pyshortver)s-cp%(pyshortver)sm-linux_x86_64.whl"
configure_and_build_cmd  = 'export TEST_TMPDIR=/dev/shm/$USER/bazelout/ && '
configure_and_build_cmd += 'export PYTHON_LIB_PATH_FOR_CONFIGURE="%(installdir)s/lib/python%(pyshortver)s/site-packages" && ' # required for simon_says_configure.bash
configure_and_build_cmd += 'chmod +x simon_says_configure.bash && '
configure_and_build_cmd += './simon_says_configure.bash && '
# 1.0.1
#configure_and_build_cmd += "bazel build --verbose_failures --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse4.2 --copt=-msse4.1 "
# 1.4.1
#configure_and_build_cmd += "bazel build --config=cuda --verbose_failures --incompatible_load_argument_is_label=false --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse4.2 --copt=-msse4.1 --cxxopt='-D_GLIBCXX_USE_CXX11_ABI=0'"
configure_and_build_cmd += 'bazel build --verbose_failures -c opt //tensorflow/tools/pip_package:build_pip_package && '
configure_and_build_cmd += 'bazel-bin/tensorflow/tools/pip_package/build_pip_package %(builddir)s &&'
configure_and_build_cmd += 'pip install --no-deps --prefix  %(builddir)s %(builddir)s/' + tf_wheel_file

cmds_map = [
    ('v%(version)s.tar.gz', configure_and_build_cmd),
]

files_to_copy = [
    (['%(builddir)s/' + tf_wheel_file], '%(installdir)s'),
    (['%(builddir)s/bin'], '%(installdir)s'),
    (['%(builddir)s/lib'], '%(installdir)s'),
]

postinstallcmds = [ 'rm -rf /dev/shm/$USER/bazelout/' ]

sanity_check_paths={
    'files': [tf_wheel_file],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

modextrapaths = {'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages']}

moduleclass = 'lang'
